{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/registration.service\";\nimport * as i3 from \"src/app/services/course.service\";\nimport * as i4 from \"src/app/services/student.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction ManageRegistrationsComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Registration date cannot be in the future\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageRegistrationsComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const student_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", student_r3.studentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(student_r3.firstName + \" \" + student_r3.lastName);\n  }\n}\nfunction ManageRegistrationsComponent_ng_container_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"option\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const course_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", course_r4.courseId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(course_r4.courseName);\n  }\n}\nexport class ManageRegistrationsComponent {\n  constructor(route, router, registrationService, courseService, studentService) {\n    this.route = route;\n    this.router = router;\n    this.registrationService = registrationService;\n    this.courseService = courseService;\n    this.studentService = studentService;\n    this.registration = {};\n    this.students = [];\n    this.courses = [];\n  }\n  ngOnInit() {\n    this.getCourses();\n    this.getStudents();\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      console.log(\"id = \" + id);\n      if (id) {\n        this.registrationService.getRegistrations().subscribe(data => {\n          this.registration = data.find(s => s.registrationId.toString() === id);\n        });\n      }\n    });\n  }\n  saveRegistration() {\n    if (this.registration.registrationId) {\n      this.registrationService.updateRegistration(this.registration).subscribe(() => {\n        this.router.navigate(['/registrations']);\n      }, error => {\n        alert(error);\n      });\n    } else {\n      this.registrationService.addRegistration(this.registration).subscribe(() => {\n        this.router.navigate(['/registrations']);\n      });\n    }\n  }\n  isDateInFuture(date) {\n    return new Date(date) > new Date();\n  }\n  getStudents() {\n    this.studentService.getStudents().subscribe(data => {\n      this.students = data;\n      debugger;\n    });\n  }\n  getCourses() {\n    this.courseService.getCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n}\nManageRegistrationsComponent.ɵfac = function ManageRegistrationsComponent_Factory(t) {\n  return new (t || ManageRegistrationsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RegistrationService), i0.ɵɵdirectiveInject(i3.CourseService), i0.ɵɵdirectiveInject(i4.StudentService));\n};\nManageRegistrationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageRegistrationsComponent,\n  selectors: [[\"app-manage-registrations\"]],\n  decls: 19,\n  vars: 9,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"date\", \"name\", \"RegistrationDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error\", 4, \"ngIf\"], [\"name\", \"StudentId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [\"name\", \"CourseId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"error\"], [3, \"value\"]],\n  template: function ManageRegistrationsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ManageRegistrationsComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.saveRegistration();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Registration Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageRegistrationsComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.registration.registrationDate = $event;\n      });\n      i0.ɵɵpipe(5, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, ManageRegistrationsComponent_div_6_Template, 2, 0, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\");\n      i0.ɵɵtext(9, \"Student\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageRegistrationsComponent_Template_select_ngModelChange_10_listener($event) {\n        return ctx.registration.studentId = $event;\n      });\n      i0.ɵɵtemplate(11, ManageRegistrationsComponent_ng_container_11_Template, 3, 2, \"ng-container\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\");\n      i0.ɵɵtext(14, \"Course\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageRegistrationsComponent_Template_select_ngModelChange_15_listener($event) {\n        return ctx.registration.courseId = $event;\n      });\n      i0.ɵɵtemplate(16, ManageRegistrationsComponent_ng_container_16_Template, 3, 2, \"ng-container\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"button\", 7);\n      i0.ɵɵtext(18, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(5, 6, ctx.registration.registrationDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDateInFuture(ctx.registration.registrationDate));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.registration.studentId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.students);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.registration.courseId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.RequiredValidator, i6.NgModel, i6.NgForm, i5.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ManageRegistrationsComponent","constructor","route","router","registrationService","courseService","studentService","ngOnInit","getCourses","getStudents","paramMap","subscribe","params","id","get","console","log","getRegistrations","data","registration","find","s","registrationId","toString","saveRegistration","updateRegistration","navigate","error","alert","addRegistration","isDateInFuture","date","Date","students","courses","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-registrations\\manage-registrations.component.html","C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-registrations\\manage-registrations.component.ts"],"sourcesContent":["<form (ngSubmit)=\"saveRegistration()\">\n    <div class=\"form-group\">\n        <label>Registration Date</label>\n        <input type=\"date\" class=\"form-control\" [ngModel]=\"registration.registrationDate | date:'yyyy-MM-dd'\" \n               (ngModelChange)=\"registration.registrationDate = $event\" name=\"RegistrationDate\" required> \n        <div *ngIf=\"isDateInFuture(registration.registrationDate)\" class=\"error\">Registration date cannot be in the future</div>\n    </div>\n    <div class=\"form-group\">\n        <label>Student</label>\n        <select class=\"form-control\" [(ngModel)]=\"registration.studentId\" name=\"StudentId\" required>\n          <ng-container *ngFor=\"let student of students\" >\n            <option [value]=\"student.studentId\">{{ student.firstName + \" \" + student.lastName }}</option>\n          </ng-container>       \n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label>Course</label>\n        <select class=\"form-control\" [(ngModel)]=\"registration.courseId\" name=\"CourseId\" required>\n          <ng-container *ngFor=\"let course of courses\" >\n            <option [value]=\"course.courseId\">{{ course.courseName }}</option>\n          </ng-container>       \n        </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Registration } from '../../models/registration.model';\nimport { RegistrationService } from '../../services/registration.service';\nimport { Student } from 'src/app/models/student.model';\nimport { Course } from 'src/app/models/course.model';\nimport { CourseService } from 'src/app/services/course.service';\nimport { StudentService } from 'src/app/services/student.service';\n@Component({\n  selector: 'app-manage-registrations',\n  templateUrl: './manage-registrations.component.html',\n  styleUrls: ['./manage-registrations.component.css']\n})\nexport class ManageRegistrationsComponent implements OnInit {\n  registration: Registration = {} as Registration;\n  students: Student[] = [];\n  courses: Course[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private registrationService: RegistrationService,\n    private courseService: CourseService,\n    private studentService: StudentService\n  ) { }\n  ngOnInit(): void {\n    this.getCourses();\n    this.getStudents();\n\n    this.route.paramMap.subscribe(params  => {\n      const id = params.get('id');\n      console.log(\"id = \"+id)\n      if (id) {\n        this.registrationService.getRegistrations().subscribe(data => {\n          this.registration = data.find(s => s.registrationId.toString() === id)!;\n        });\n      }\n    });\n  }\n  saveRegistration() {\n    if (this.registration.registrationId) {\n      this.registrationService.updateRegistration(this.registration).subscribe(() => {\n        this.router.navigate(['/registrations']);\n      }, (error) => {\n        alert(error);\n      });\n    } else {\n      this.registrationService.addRegistration(this.registration).subscribe(() => {\n        this.router.navigate(['/registrations']);\n      });\n    }\n  }\n  isDateInFuture(date: Date) {\n    return new Date(date) > new Date();\n  }\n\n  private getStudents() {\n    this.studentService.getStudents().subscribe(data => {\n      this.students = data;\n      debugger;\n    });\n  }\n  private getCourses() {\n    this.courseService.getCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}