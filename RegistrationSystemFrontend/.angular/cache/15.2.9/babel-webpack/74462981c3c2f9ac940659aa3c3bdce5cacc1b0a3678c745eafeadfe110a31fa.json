{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/student.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ManageStudentsComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \"Birth date cannot be in the future\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ManageStudentsComponent {\n  constructor(route, router, studentService) {\n    this.route = route;\n    this.router = router;\n    this.studentService = studentService;\n    this.student = {};\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      console.log(\"id = \" + id);\n      if (id) {\n        this.studentService.getStudents().subscribe(data => {\n          this.student = data.find(s => s.studentId.toString() === id);\n        });\n      }\n    });\n  }\n  saveStudent() {\n    if (this.student.studentId) {\n      this.studentService.updateStudent(this.student).subscribe(() => {\n        this.router.navigate(['/students']);\n      }, error => {\n        alert(error);\n      });\n    } else {\n      this.studentService.addStudent(this.student).subscribe(() => {\n        this.router.navigate(['/students']);\n      });\n    }\n  }\n  isDateInFuture(date) {\n    return new Date(date) > new Date();\n  }\n}\nManageStudentsComponent.ɵfac = function ManageStudentsComponent_Factory(t) {\n  return new (t || ManageStudentsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StudentService));\n};\nManageStudentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageStudentsComponent,\n  selectors: [[\"app-manage-students\"]],\n  decls: 21,\n  vars: 8,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"StudentNumber\", \"required\", \"\", \"pattern\", \"[0-9]{4}\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"FirstName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"LastName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"date\", \"name\", \"BirthDate\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"error\"]],\n  template: function ManageStudentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ManageStudentsComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.saveStudent();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n      i0.ɵɵtext(3, \"Student Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageStudentsComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.student.studentNumber = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\");\n      i0.ɵɵtext(7, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageStudentsComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.student.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\");\n      i0.ɵɵtext(11, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageStudentsComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.student.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\");\n      i0.ɵɵtext(15, \"Birth Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageStudentsComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.student.birthDate = $event;\n      });\n      i0.ɵɵpipe(17, \"date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, ManageStudentsComponent_div_18_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 7);\n      i0.ɵɵtext(20, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.student.studentNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.student.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.student.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(17, 5, ctx.student.birthDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDateInFuture(ctx.student.birthDate));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm, i3.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAiBMA,8BAA6D;IAAAA,kDAAkC;IAAAA,iBAAM;;;ACR3G,OAAM,MAAOC,uBAAuB;EAGlCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IALxB,YAAO,GAAY,EAAa;EAM5B;EACJC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAI;MACtC,MAAMC,EAAE,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,GAACH,EAAE,CAAC;MACvB,IAAIA,EAAE,EAAE;QACN,IAAI,CAACL,cAAc,CAACS,WAAW,EAAE,CAACN,SAAS,CAACO,IAAI,IAAG;UACjD,IAAI,CAACC,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAACC,QAAQ,EAAE,KAAKV,EAAE,CAAE;QAC/D,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EACAW,WAAW;IACT,IAAI,IAAI,CAACL,OAAO,CAACG,SAAS,EAAE;MAC1B,IAAI,CAACd,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACN,OAAO,CAAC,CAACR,SAAS,CAAC,MAAK;QAC7D,IAAI,CAACJ,MAAM,CAACmB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACrC,CAAC,EAAGC,KAAK,IAAI;QACXC,KAAK,CAACD,KAAK,CAAC;MACd,CAAC,CAAC;KACH,MAAM;MACL,IAAI,CAACnB,cAAc,CAACqB,UAAU,CAAC,IAAI,CAACV,OAAO,CAAC,CAACR,SAAS,CAAC,MAAK;QAC1D,IAAI,CAACJ,MAAM,CAACmB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;MACrC,CAAC,CAAC;;EAEN;EACAI,cAAc,CAACC,IAAU;IAEvB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,GAAG,IAAIC,IAAI,EAAE;EACpC;;AAnCW5B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTpClC,+BAAiC;MAA3BA;QAAA,OAAYmC,iBAAa;MAAA,EAAC;MAC5BnC,8BAAwB;MACfA,8BAAc;MAAAA,iBAAQ;MAC7BA,gCAA6H;MAArFA;QAAA;MAAA,EAAmC;MAA3EA,iBAA6H;MAE/HA,8BAAwB;MACfA,0BAAU;MAAAA,iBAAQ;MACzBA,gCAAkG;MAA1DA;QAAA;MAAA,EAA+B;MAAvEA,iBAAkG;MAEpGA,8BAAwB;MACfA,0BAAS;MAAAA,iBAAQ;MACxBA,iCAAgG;MAAxDA;QAAA;MAAA,EAA8B;MAAtEA,iBAAgG;MAElGA,+BAAwB;MACfA,2BAAU;MAAAA,iBAAQ;MACzBA,iCAC8E;MAAvEA;QAAA;MAAA,EAA4C;;MADnDA,iBAC8E;MAC9EA,0EAAqG;MACvGA,iBAAM;MACNA,kCAA8C;MAAAA,qBAAI;MAAAA,iBAAS;;;MAhBjBA,eAAmC;MAAnCA,mDAAmC;MAInCA,eAA+B;MAA/BA,+CAA+B;MAI/BA,eAA8B;MAA9BA,8CAA8B;MAI9BA,eAAiD;MAAjDA,oFAAiD;MAEnFA,eAAuC;MAAvCA,gEAAuC","names":["i0","ManageStudentsComponent","constructor","route","router","studentService","ngOnInit","paramMap","subscribe","params","id","get","console","log","getStudents","data","student","find","s","studentId","toString","saveStudent","updateStudent","navigate","error","alert","addStudent","isDateInFuture","date","Date","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-students\\manage-students.component.html","C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-students\\manage-students.component.ts"],"sourcesContent":["<form (ngSubmit)=\"saveStudent()\">\n    <div class=\"form-group\">\n      <label>Student Number</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"student.studentNumber\" name=\"StudentNumber\" required pattern=\"[0-9]{4}\">\n    </div>\n    <div class=\"form-group\">\n      <label>First Name</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"student.firstName\" name=\"FirstName\" required>\n    </div>\n    <div class=\"form-group\">\n      <label>Last Name</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"student.lastName\" name=\"LastName\" required> \n    </div>\n    <div class=\"form-group\">\n      <label>Birth Date</label>\n      <input type=\"date\" class=\"form-control\" [ngModel]=\"student.birthDate | date:'yyyy-MM-dd'\" \n             (ngModelChange)=\"student.birthDate = $event\" name=\"BirthDate\" required> \n      <div *ngIf=\"isDateInFuture(student.birthDate)\" class=\"error\">Birth date cannot be in the future</div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student } from '../../models/student.model';\nimport { StudentService } from '../../services/student.service';\n@Component({\n  selector: 'app-manage-students',\n  templateUrl: './manage-students.component.html',\n  styleUrls: ['./manage-students.component.css']\n})\nexport class ManageStudentsComponent implements OnInit {\n  student: Student = {} as Student;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private studentService: StudentService\n  ) { }\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(params  => {\n      const id = params.get('id');\n      console.log(\"id = \"+id)\n      if (id) {\n        this.studentService.getStudents().subscribe(data => {\n          this.student = data.find(s => s.studentId.toString() === id)!;\n        });\n      }\n    });\n  }\n  saveStudent() {\n    if (this.student.studentId) {\n      this.studentService.updateStudent(this.student).subscribe(() => {\n        this.router.navigate(['/students']);\n      }, (error) => {\n        alert(error);\n      });\n    } else {\n      this.studentService.addStudent(this.student).subscribe(() => {\n        this.router.navigate(['/students']);\n      });\n    }\n  }\n  isDateInFuture(date: Date) {\n\n    return new Date(date) > new Date();\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}