{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/registration.service\";\nimport * as i2 from \"src/app/services/course.service\";\nimport * as i3 from \"src/app/services/student.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/manage-registration\", a1];\n};\nfunction ViewRegistrationsComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"button\", 3);\n    i0.ɵɵtext(10, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ViewRegistrationsComponent_tr_14_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const registration_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteRegistration(registration_r1.registrationId));\n    });\n    i0.ɵɵtext(12, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const registration_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 4, registration_r1.registrationDate, \"yyyy-MM-dd\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.getStudentName(registration_r1.studentId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.getCourseName(registration_r1.courseId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c0, registration_r1.registrationId));\n  }\n}\nexport class ViewRegistrationsComponent {\n  constructor(registrationService, courseService, studentService) {\n    this.registrationService = registrationService;\n    this.courseService = courseService;\n    this.studentService = studentService;\n    this.registrations = [];\n    this.courses = [];\n    this.students = [];\n  }\n  ngOnInit() {\n    this.getStudents();\n    this.getCourses();\n    this.getRegistrations();\n  }\n  getRegistrations() {\n    this.registrationService.getRegistrations().subscribe(data => {\n      this.registrations = data;\n    });\n  }\n  deleteRegistration(registrationId) {\n    if (confirm('Are you sure you want to delete this registration?')) {\n      this.registrationService.deleteRegistration(registrationId).subscribe(() => {\n        this.getRegistrations();\n      });\n    }\n  }\n  getCourses() {\n    this.courseService.getCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n  getCourseName(courseId) {\n    const course = this.courses.find(ct => ct.courseId === courseId);\n    return course ? course.courseName : '';\n  }\n  getStudents() {\n    this.studentService.getStudents().subscribe(data => {\n      this.students = data;\n    });\n  }\n  getStudentName(studentId) {\n    const student = this.students.find(ct => ct.studentId === studentId);\n    return student ? student.firstName + \" \" + student.lastName : '';\n  }\n}\nViewRegistrationsComponent.ɵfac = function ViewRegistrationsComponent_Factory(t) {\n  return new (t || ViewRegistrationsComponent)(i0.ɵɵdirectiveInject(i1.RegistrationService), i0.ɵɵdirectiveInject(i2.CourseService), i0.ɵɵdirectiveInject(i3.StudentService));\n};\nViewRegistrationsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ViewRegistrationsComponent,\n  selectors: [[\"app-view-registrations\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[\"routerLink\", \"/manage-registration\", 1, \"btn\", \"btn-primary\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-warning\", 3, \"routerLink\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ViewRegistrationsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Add Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Registration ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Registration Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Student\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Course\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"tbody\");\n      i0.ɵɵtemplate(14, ViewRegistrationsComponent_tr_14_Template, 13, 9, \"tr\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.registrations);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.RouterLink, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ViewRegistrationsComponent","constructor","registrationService","courseService","studentService","ngOnInit","getStudents","getCourses","getRegistrations","subscribe","data","registrations","deleteRegistration","registrationId","confirm","courses","getCourseName","courseId","course","find","ct","courseName","students","getStudentName","studentId","student","firstName","lastName","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\view-registrations\\view-registrations.component.html","C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\view-registrations\\view-registrations.component.ts"],"sourcesContent":["<button class=\"btn btn-primary\" routerLink=\"/manage-registration\">Add Registration</button>\n<table class=\"table\">\n  <thead>\n    <tr>\n      <th>Registration ID</th>\n      <th>Registration Date</th>\n      <th>Student</th>\n      <th>Course</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let registration of registrations\">\n      <td>{{registration.registrationDate | date:'yyyy-MM-dd'}}</td>\n      <td>{{getStudentName(registration.studentId)}}</td>\n      <td>{{getCourseName(registration.courseId)}}</td>\n      <td>\n        <button class=\"btn btn-warning\" [routerLink]=\"['/manage-registration', registration.registrationId]\">Edit</button>\n        <button class=\"btn btn-danger\" (click)=\"deleteRegistration(registration.registrationId)\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EMPTY } from 'rxjs';\nimport { Course } from 'src/app/models/course.model';\nimport { Registration } from 'src/app/models/registration.model';\nimport { Student } from 'src/app/models/student.model';\nimport { CourseService } from 'src/app/services/course.service';\nimport { RegistrationService } from 'src/app/services/registration.service';\nimport { StudentService } from 'src/app/services/student.service';\n\n@Component({\n  selector: 'app-view-registrations',\n  templateUrl: './view-registrations.component.html',\n  styleUrls: ['./view-registrations.component.css']\n})\nexport class ViewRegistrationsComponent {\n  registrations: Registration[] = [];\n  courses: Course[] = [];\n  students: Student[] = [];\n\n  constructor(private registrationService: RegistrationService,\n              private courseService: CourseService,\n              private studentService: StudentService) { }\n\n  ngOnInit(): void {\n    this.getStudents();\n    this.getCourses();\n\n    this.getRegistrations();\n  }\n\n  private getRegistrations() {\n    this.registrationService.getRegistrations().subscribe(data => {\n      this.registrations = data;\n    });\n  }\n\n  deleteRegistration(registrationId: number) {\n    if(confirm('Are you sure you want to delete this registration?')) {\n      this.registrationService.deleteRegistration(registrationId).subscribe(() => {\n        this.getRegistrations();\n      });\n    }\n  }\n\n  private getCourses() {\n    this.courseService.getCourses().subscribe(data => {\n      this.courses = data;\n    });\n  }\n\n  getCourseName(courseId: number): string {\n    const course = this.courses.find(ct => ct.courseId === courseId);\n    return course ? course.courseName : '';\n  }\n\n  private getStudents() {\n    this.studentService.getStudents().subscribe(data => {\n      this.students = data;\n    });\n  }\n\n  getStudentName(studentId: number): string {\n    const student = this.students.find(ct => ct.studentId === studentId);\n    return student ? (student.firstName + \" \" + student.lastName) : '';\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}