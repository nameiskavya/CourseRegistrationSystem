{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/course.service\";\nimport * as i3 from \"../../services/course-type.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ManageCoursesComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Course number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageCoursesComponent_ng_container_28_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const courseType_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", courseType_r4.courseTypeId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(courseType_r4.typeName);\n  }\n}\nfunction ManageCoursesComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ManageCoursesComponent_ng_container_28_option_1_Template, 2, 2, \"option\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const courseType_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !courseType_r4.isDeleted);\n  }\n}\nexport class ManageCoursesComponent {\n  constructor(route, router, courseService, courseTypeService) {\n    this.route = route;\n    this.router = router;\n    this.courseService = courseService;\n    this.courseTypeService = courseTypeService;\n    this.course = {};\n    this.courseTypes = [];\n  }\n  ngOnInit() {\n    this.getCourseTypes();\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      console.log(\"id = \" + id);\n      if (id) {\n        this.courseService.getCourses().subscribe(data => {\n          this.course = data.find(c => c.courseId.toString() === id);\n        });\n      }\n    });\n  }\n  saveCourse() {\n    if (this.course.courseId) {\n      this.courseService.updateCourse(this.course).subscribe(() => {\n        this.router.navigate(['/courses']);\n      });\n    } else {\n      this.courseService.addCourse(this.course).subscribe(() => {\n        this.router.navigate(['/courses']);\n      });\n    }\n  }\n  getCourseTypes() {\n    this.courseTypeService.getCourseTypes().subscribe(data => {\n      this.courseTypes = data;\n    });\n  }\n}\nManageCoursesComponent.ɵfac = function ManageCoursesComponent_Factory(t) {\n  return new (t || ManageCoursesComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CourseService), i0.ɵɵdirectiveInject(i3.CourseTypeService));\n};\nManageCoursesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageCoursesComponent,\n  selectors: [[\"app-manage-courses\"]],\n  decls: 31,\n  vars: 10,\n  consts: [[3, \"ngSubmit\"], [\"courseForm\", \"ngForm\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"CourseNumber\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"CourseNumber\", \"ngModel\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"CourseName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"CourseDescription\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"Cost\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"Capacity\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"CourseTypeId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"invalid-feedback\"], [3, \"value\", 4, \"ngIf\"], [3, \"value\"]],\n  template: function ManageCoursesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function ManageCoursesComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(_r0.form.valid && ctx.saveCourse());\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n      i0.ɵɵtext(4, \"Course Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.course.courseNumber = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, ManageCoursesComponent_div_7_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Course Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.course.courseName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\");\n      i0.ɵɵtext(14, \"Course Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.course.courseDescription = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\");\n      i0.ɵɵtext(18, \"Cost\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.course.cost = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\");\n      i0.ɵɵtext(22, \"Capacity\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.course.capacity = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 2)(25, \"label\");\n      i0.ɵɵtext(26, \"Course Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"select\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function ManageCoursesComponent_Template_select_ngModelChange_27_listener($event) {\n        return ctx.course.courseTypeId = $event;\n      });\n      i0.ɵɵtemplate(28, ManageCoursesComponent_ng_container_28_Template, 2, 1, \"ng-container\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"button\", 12);\n      i0.ɵɵtext(30, \"Save\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"is-invalid\", _r1.invalid && _r1.touched);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.courseNumber);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", (_r1.errors == null ? null : _r1.errors[\"required\"]) && _r1.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.courseName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.courseDescription);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.cost);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.capacity);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.course.courseTypeId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.courseTypes);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ManageCoursesComponent","constructor","route","router","courseService","courseTypeService","ngOnInit","getCourseTypes","paramMap","subscribe","params","id","get","console","log","getCourses","data","course","find","c","courseId","toString","saveCourse","updateCourse","navigate","addCourse","courseTypes","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-courses\\manage-courses.component.html","C:\\Users\\Student\\source\\repos\\Assignment_4_Angular_3135520\\src\\app\\components\\manage-courses\\manage-courses.component.ts"],"sourcesContent":["<form #courseForm=\"ngForm\" (ngSubmit)=\"courseForm.form.valid && saveCourse()\">\n    <div class=\"form-group\">\n      <label>Course Number</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseNumber\" name=\"CourseNumber\" required #CourseNumber=\"ngModel\"\n      [class.is-invalid]=\"CourseNumber.invalid && CourseNumber.touched\">\n      <div *ngIf=\"CourseNumber.errors?.['required'] && CourseNumber.touched\" class=\"invalid-feedback\">\n        Course number is required\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Course Name</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseName\" name=\"CourseName\" required>\n\n    </div>\n    <div class=\"form-group\">\n      <label>Course Description</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"course.courseDescription\" name=\"CourseDescription\" required> \n    </div>\n    <div class=\"form-group\">\n      <label>Cost</label>\n      <input type=\"number\" class=\"form-control\" [(ngModel)]=\"course.cost\" name=\"Cost\" required> \n    </div>\n    <div class=\"form-group\">\n      <label>Capacity</label>\n      <input type=\"number\" class=\"form-control\" [(ngModel)]=\"course.capacity\" name=\"Capacity\" required> \n    </div>\n    <div class=\"form-group\">\n      <label>Course Type</label>\n      <select class=\"form-control\" [(ngModel)]=\"course.courseTypeId\" name=\"CourseTypeId\" required>\n        <ng-container *ngFor=\"let courseType of courseTypes\" >\n          <option [value]=\"courseType.courseTypeId\" *ngIf=\"!courseType.isDeleted\">{{courseType.typeName}}</option>\n        </ng-container>       \n      </select>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Course } from '../../models/course.model';\nimport { CourseType } from '../../models/course-type.model';\nimport { CourseService } from '../../services/course.service';\nimport { CourseTypeService } from '../../services/course-type.service';\n\n@Component({\n  selector: 'app-manage-courses',\n  templateUrl: './manage-courses.component.html',\n  styleUrls: ['./manage-courses.component.css']\n})\nexport class ManageCoursesComponent implements OnInit {\n  course: Course = {} as Course;\n  courseTypes: CourseType[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private courseService: CourseService,\n    private courseTypeService: CourseTypeService\n  ) { }\n\n  ngOnInit(): void {\n    this.getCourseTypes();\n\n    this.route.paramMap.subscribe(params  => {\n      const id = params.get('id');\n      console.log(\"id = \"+id)\n      if (id) {\n        this.courseService.getCourses().subscribe(data => {\n          this.course = data.find(c => c.courseId.toString() === id)!;\n        });\n      }\n    });\n  }\n\n  saveCourse() {\n    if (this.course.courseId) {\n      this.courseService.updateCourse(this.course).subscribe(() => {\n        this.router.navigate(['/courses']);\n      });\n    } else {\n      this.courseService.addCourse(this.course).subscribe(() => {\n        this.router.navigate(['/courses']);\n      });\n    }\n  }\n\n  private getCourseTypes() {\n    this.courseTypeService.getCourseTypes().subscribe(data => {\n      this.courseTypes = data;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}